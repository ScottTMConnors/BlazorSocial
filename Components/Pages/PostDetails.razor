@page "/post/{Id}"

@using System.Diagnostics;
@using Data;
@using Data.Entities;
@using Data.ComponentObjects;

@inject NavigationManager NavigationManager

@inject ContentDbContext DbContext

<h1>@_currentPost.Title</h1>
<br/>
<p>@((MarkupString)_currentPost.Content)</p>
<br />
<p>@_currentPost.PostDate</p>
<br />
<p>Views: @_currentPost.PostMetadata.ViewCount</p>
<br />
<p>Score: @_currentPost.PostMetadata.NetVotes | Upvotes: @_currentPost.PostMetadata.Upvotes | Downvotes: @_currentPost.PostMetadata.Downvotes </p>


@code {

    [Parameter]
    public string Id { get; set; }

    private Post? _currentPost;

    protected override void OnInitialized() {

        if (Id == null || Id == "") {
            NavigationManager.NavigateTo("/ViewPosts");
        }

        //Get the post object associated with this id
        _currentPost = DbContext.Posts.Where(post => post.Id == Id).Select(post => new ViewPostObject {
            Id = post.Id,
            Title = post.Title,
            Content = post.Content.Substring(0, 1000),
            PostDate = post.PostDate,
            DateString = ConvertDateToString(post.PostDate),
            AuthorID = post.AuthorID,
            AuthorName = "",
            PostMetadata = post.PostMetadata
        }).FirstOrDefault();

    }

    public static string ConvertDateToString(DateTime? date) {
        if (!date.HasValue) {
            return "Invalid date";
        }

        TimeSpan difference = DateTime.Now - date.Value;

        if (difference.TotalDays >= 1) {
            return date.Value.ToString();
        } else if (difference.TotalHours >= 1) {
            return $"{(int)difference.TotalHours}h";
        } else if (difference.TotalMinutes >= 1) {
            return $"{(int)difference.TotalMinutes}m";
        } else {
            return $"{(int)difference.TotalSeconds}s";
        }
    }

}
